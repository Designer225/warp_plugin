
fleet_get_lowest_warp_time_mult = {
	random_owned_ship = {
		limit = {
			has_component = WARP_DRIVE_3
		}
		save_event_target_as = warp_plugin_temp_slowest_ship
	}
	random_owned_ship = {
		limit = {
			has_component = WARP_DRIVE_2
		}
		save_event_target_as = warp_plugin_temp_slowest_ship
	}
	random_owned_ship = {
		limit = {
			or = {
				has_component = BIO_DRIVE
				has_component = WARP_DRIVE_1
			}
		}
		save_event_target_as = warp_plugin_temp_slowest_ship
	}
	random_owned_ship = {
		limit = {
			or = {
				has_component = EMPTY_DRIVE
				has_component = EMPTY_DRIVE_CIVILIAN
			}
		}
		save_event_target_as = warp_plugin_temp_slowest_ship
	}

	if = {
		limit = {
			exists = event_target:warp_plugin_temp_slowest_ship
		}
		# event_target:warp_plugin_temp_slowest_ship = {
		# 	export_modifier_to_variable = {
		# 		modifier = ship_windup_mult
		# 		variable = warp_time_mult
		# 	}
		# }
		set_variable = {
			which = warp_time_mult
			value = event_target:warp_plugin_temp_slowest_ship.modifier:ship_windup_mult
		}
		# event_target:warp_plugin_temp_slowest_ship = {
		# 	clear_variable = warp_time_mult
		# }
	}
}

situation_warp_in_progress_resolve = {
	set_variable = {
		which = progress
		value = trigger:situation_progress
	}
	if = {
		limit = {
			check_variable = {
				which = progress
				value < 40
			}
		}
		multiply_variable = {
			which = progress
			value = -1
		}
		change_variable = {
			which = progress
			value = 40
		}
		target = {
			every_owned_ship = {
				add_modifier = {
					modifier = warp_plugin_rushed_ftl
					months = 1
					multiplier = prevprev.progress
				}
			}
		}

		# critical failure rolls
		if = {
			limit = {
				check_variable = {
					which = progress
					value < 20
				}
			}
			multiply_variable = {
				which = progress
				value = -1
			}
			change_variable = {
				which = progress
				value = 20
			}
			random_list = {
				1 = {
					target = {
						fleet_event = { id = warp_plugin.102 }
					}
					modifier = {
						factor = progress
					}
				}
				20 = {}
			}
		}
	}
	else_if = {
		limit = {
			check_variable = {
				which = progress
				value > 50
			}
		}
		subtract_variable = {
			which = progress
			value = 50
		}
		target = {
			every_owned_ship = {
				add_modifier = {
					modifier = warp_plugin_diagnostics
					months = 1
					multiplier = prevprev.progress
				}
			}
		}
	}
	clear_variable = progress
}

situation_warp_in_progress_show_outcome = {
	if = {
		limit = { situation_progress < 40 }
		custom_tooltip = warp_plugin_on_abort_fail
		if = {
			limit = { situation_progress < 20 }
			custom_tooltip = warp_plugin_on_abort_critical_fail
		}
	}
	else_if = {
		limit = { situation_progress > 50 }
		custom_tooltip = warp_plugin_on_abort_complete
	}
	else = {
		custom_tooltip = warp_plugin_on_abort_normal
	}
}
